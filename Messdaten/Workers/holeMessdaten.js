  //04.11.2012 PV  //29.11.2012 PV  //setze Bootstrap  //  // konfiguriert über WebServices Bootstrap als shared Worker, der ab Server Start sich regelmäßig ausführt  //  // var status = ds.Messdaten.holeMessdaten(7, "kWh", "Reisen", 720, 433); //Stromzäler WZ Reisen  // var status = ds.Messdaten.holeMessdaten(0, "°", "Reisen", 720, 433); //Vorlauf Heizköer Reisen  // var status = ds.Messdaten.holeMessdaten(10, "°", "Reisen", 720, 433); //WW-Speicher  // var status = ds.Messdaten.holeMessdaten(11, "°", "Reisen", 720, 433); //HZ-Speicher  // var status = ds.Messdaten.holeMessdaten(1, "°", "Eiche", 1440, 150); //WG unten  // var status = ds.Messdaten.holeMessdaten(2, "°", "Eiche", 1440, 150); //WG Giebel  // var status = ds.Messdaten.holeMessdaten(5, "°", "Eiche", 1440, 150); //Speicher unten  // var status = ds.Messdaten.holeMessdaten(6, "°", "Eiche", 1440, 150); //Speicher oben  // var status = ds.Messdaten.holeMessdaten(7, "°", "Eiche", 1440, 150); //Vorlauf Fußoden  // var status = ds.Messdaten.holeMessdaten(10, "°", "Eiche", 1440, 150); //GW Giebel  // var status = ds.Messdaten.holeMessdaten(11, "°", "Eiche", 1440, 150); //Innentemperatur  // var status = ds.Messdaten.holeMessdaten(12, "°", "Eiche", 1440, 150); //Aussentemperatur  var i = 0;  function getMessdaten() {      i += 1;      var ergebnisHoleMessdaten = "";  	 console.log('hole Messdaten für alle Sensoren ' + i);      var alleSensoren = ds.Sensoren.all();      alleSensoren.forEach(function(sensorEintrag) {          ergebnisHoleMessdaten += ds.Messdaten.holeMessdaten(sensorEintrag.Sensor_ID, sensorEintrag.Einheit, sensorEintrag.Ort, sensorEintrag.Intervall, sensorEintrag.anzahlWerte) + "\n";      });      var jetzt = new Date();      var logEintrag = ds.Protokoll.createEntity();      logEintrag.erstellt = jetzt;      logEintrag.beschreibung = ergebnisHoleMessdaten;      logEintrag.save();      console.log('Messdaten per http-Get abgeholt ' + i);  }  console.log('holeMessdaten SharedWorker gestartet - warte auf Timer');  //var intervallID = setInterval(getMessdaten, 1000 * 60 * 36);  //wait();  setInterval(getMessdaten, 1000 * 60 * 12);